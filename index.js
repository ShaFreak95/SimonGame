var started = false ;
//return false when the game is not started so event listener
//will not be triggered at the beginning of a game

var buttonColors = [ "red", "blue", "green", "yellow" ] ;
//list of colours to be picked by the game

var userClickedPattern = [] ;
//empty array to store clicked button color id

var gamePattern = [] ;
//getting the colour that needs to be clicked for each level
//and compare it to the clicked button made by user

var level = 0 ;
//value for the level, will increases after getting to the next level

$(document).keydown( function (){
  if ( !started ){
    started = true ;
    nextSequence();
    //after pressing keyboard key, triggers the function to highlight
    //button
  }

});

$(".btn").click( function () {
  //when user clicks button, events below will occured

  var userChosenColor = this.id;
  //var userChosenColor gets the id of the clicked button

  userClickedPattern.push(userChosenColor);
  //push the value into the empty array of userClickedPattern

  playSound( userChosenColor ) ;
  //play sounds according to the button that user clicked

  animatePress( userChosenColor ) ;
  //add highlighted animation when clicking button

  nextAnswer( userClickedPattern.length - 1 ) ;

}) ;

function nextSequence () {

  userClickedPattern = [] ;
  // reset the array for the next level, after user successfully clicked
  // the right button patterns

  var randomNumber = Math.floor( Math.random() * 4 );
  //getting random number between 0-3

  var randomChosenColor = buttonColors[ randomNumber ];
  //selecting random colours from the array

  gamePattern.push( randomChosenColor ) ;
  //randomly chosen color will be stored here for every level

  $( "#" + randomChosenColor ).fadeOut(100).fadeIn(100) ;
  //animate a flash to the button before user clicks any button

  var playAudio = new Audio("sounds/" + randomChosenColor + ".mp3" );

  playAudio.play();
  //plays audio according to the random chosen colour

  level = ++level ;

  $("#level-title").html( "Level " + level ) ;

  // playSound(randomChosenColor) ;
  //access function where it will highlighted button to choose when started

  // buttonAnimated(randomChosenColor);
}

function playSound ( name ) {
  switch (name) {
    case "green":

      var soundFx = new Audio("sounds/green.mp3") ;
      //add new Audio object to green coloured button

      soundFx.play();
      //play the FX for green button
      break;

      case "red":

        var soundFx = new Audio("sounds/red.mp3") ;
        //add new Audio object to red coloured button

        soundFx.play();
        //play the FX for red button
        break;

        case "yellow":

          var soundFx = new Audio("sounds/yellow.mp3") ;
          //add new Audio object to yellow coloured button

          soundFx.play();
          //play the FX for yellow button
          break;

        case "blue":

          var soundFx = new Audio("sounds/blue.mp3") ;
          //add new Audio object to blue coloured button

          soundFx.play();
          //play the FX for blue button
          break;

    default:

    console.log("Error occured!!") ;

  }
}

function animatePress ( currentColor ) {
  var activeButton = $( "." + currentColor ) ;
  //selecting the targeted button class

  activeButton.addClass( "pressed" ) ;
  //adding pressed class to the targeted class

  setTimeout ( function () {
    activeButton.removeClass("pressed") ;
  }, 200) ;
  //create a few ms highlighted animation after pressing the button
  //by removing the pressed class
  //takes about 0.1 second
}

function nextAnswer ( currentLevel ) {
  if ( gamePattern [currentLevel] === userClickedPattern [currentLevel] ) {
    //comparing the last pattern user clicked to the last colour pattern
    //that is generated by the game

    if ( gamePattern.length === userClickedPattern.length ){
      //making sure the array length are the same to continue
      //to the next level
      setTimeout ( function (){
        nextSequence() ;
      }, 1000) ;
      //triggers the next level after successfully clicked the
      //correct pattern
    }
  }
  else {
    $("body").addClass("game-over");
    $("#level-title").html("Wrong pattern! Refresh to try again.");
    //change the h1 to display a text that user chose incorrect pattern/s

    startOver();
    //resets the variables level, gamePattern and started

    var wrongSound = new Audio( "sounds/wrong.mp3" ) ;
    wrongSound.play() ;
    //plays the wrong sfx too

    setTimeout ( function (){
      $("body").removeClass("game-over");
    }, 300) ;
    // create animation and sound when chose the incorrect pattern
  }
  //update to the next level if successfully clicked the right button
}

function startOver() {
  level = 0 ;
  gamePattern = [] ;
  started = false ;
  //resets the variables level, gamePattern and started when get the
  //incorrect pattern
}
